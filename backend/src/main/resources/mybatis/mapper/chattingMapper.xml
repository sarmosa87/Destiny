<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="com.project.mapper.ChattingMapper">


    <insert id="insertChat" parameterType="com.project.dto.ChatDTO">
            insert into chat (chatNum,senderId,receiverId,message,timestamp) values 
            (#{chatNum},#{senderId},#{receiverId},#{message},#{timestamp})
    </insert>


    <select id="maxNum" resultType="int">
            SELECT COALESCE(MAX(chatNum), 0) FROM chat
    </select>



     <select id="chatList" parameterType="com.project.dto.ChatDTO" resultType="com.project.dto.ChatDTO">
        select *from chat where senderId = #{senderId} AND receiverId = #{receiverId} or senderId = #{receiverId} AND receiverId = #{senderId}
        order by chatNum asc

    </select>


      <select id="chattingList" parameterType="String" resultType="com.project.dto.ChatDTO">
        SELECT c.chatNum, c.senderId, c.receiverId, c.message, c.timestamp, u.name
    FROM (
        SELECT chatNum, senderId, receiverId, message, timestamp,
              CASE WHEN senderId = #{senderId} THEN receiverId ELSE senderId END AS otherUserId,
              ROW_NUMBER() OVER (PARTITION BY CASE WHEN senderId = #{senderId} THEN receiverId ELSE senderId END ORDER BY chatNum DESC) AS rn
        FROM chat
        WHERE senderId = #{senderId} OR receiverId = #{senderId}
    ) c
    JOIN users u ON u.id = c.otherUserId
    WHERE c.rn = 1
    </select>


    <select id="ranMaxNum" resultType="int">
            SELECT COALESCE(MAX(chatNum), 0) FROM ranchat
    </select>

    <select id="findUser" parameterType="String" resultType="com.project.dto.UsersDTO">
        select *from users where id!=#{id} 
    </select>

    <insert id="insertRanChat" parameterType="com.project.dto.ChatDTO">
                insert into ranchat (chatNum,senderId,receiverId,message,timestamp) values 
                (#{chatNum},#{senderId},#{receiverId},#{message},#{timestamp})
    </insert>

 
    <select id="ranChatList" parameterType="String" resultType="com.project.dto.ChatDTO">
       SELECT c.chatNum, c.senderId, c.receiverId, c.message, c.timestamp, u.name
    FROM (
        SELECT chatNum, senderId, receiverId, message, timestamp,
              CASE WHEN senderId = #{senderId} THEN receiverId ELSE senderId END AS otherUserId,
              ROW_NUMBER() OVER (PARTITION BY CASE WHEN senderId = #{senderId} THEN receiverId ELSE senderId END ORDER BY chatNum DESC) AS rn
        FROM ranchat
        WHERE senderId = #{senderId} OR receiverId = #{senderId}
    ) c
    JOIN users u ON u.id = c.otherUserId
    WHERE c.rn = 1
    </select>


      <select id="ranDomChatList" parameterType="com.project.dto.ChatDTO" resultType="com.project.dto.ChatDTO">
        select *from ranchat where senderId = #{senderId} AND receiverId = #{receiverId} or senderId = #{receiverId} AND receiverId = #{senderId}
        order by chatNum asc
    </select>

   

</mapper>

